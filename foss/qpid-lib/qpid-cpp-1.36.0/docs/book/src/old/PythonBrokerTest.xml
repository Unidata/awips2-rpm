<?xml version="1.0" encoding="utf-8"?>
<!--
 
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 
-->

<section>
  <title>
    PythonBrokerTest
  </title>
  <section role="h2" id="PythonBrokerTest-PythonBrokerSystemTestSuite">
    <title>
      Python Broker System Test Suite
    </title>
    <para>
      This is a suite of python client tests that exercise and verify
      broker functionality. Python allows us to rapidly develop client
      test scenarios and provides a 'neutral' set of tests that can run
      against any AMQP-compliant broker.
    </para>
    <para>
      The python/tests directory contains a collection of python
      modules, each containing several unittest classes, each
      containing a set of test methods that represent some test
      scenario. Test classes inherit qpid.TestBas from
      qpid/testlib.py, it inherits unittest.TestCase
      but adds some qpid-specific setUp/tearDown and
      convenience functions.
    </para>
    <para>
      TODO: get pydoc generated up to qpid wiki or website
      automatically?
    </para>
    <section role="h3" id="PythonBrokerTest-Runningthetests">
      <title>
	Running the tests
      </title>
      <para>
	Simplest way to run the tests:
      </para>
      <itemizedlist>
	<listitem>
	  <para>Run a broker on the default port
	  </para>
	</listitem>
	<listitem>
	  <para>
	    ./run_tests
	  </para>
	</listitem>
      </itemizedlist>
      <para>
	For additional options: ./run_tests --help
      </para>
      <!--h3-->
    </section>

    <section role="h3" id="PythonBrokerTest-Expectedfailures">
      <title>
	Expected failures
      </title>
      <para>
	Until we complete functionality, tests may fail because the
	tested functionality is missing in the broker. To skip
	expected failures in the C++ or Java brokers:
      </para>
      <programlisting>
./run_tests -I cpp_failing.txt
./run_tests -I java_failing.txt
      </programlisting>
      <para>
	If you fix a failure, please remove it from the corresponding
	list.
      </para>

      <!--h3-->
    </section>

    <!--h2-->
  </section>

</section>

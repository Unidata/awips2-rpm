#!/usr/bin/env bash

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Run a simple test to verify dynamic log level changes

source ./env.sh

LOG_FILE=log_test.log
trap cleanup EXIT

cleanup() {
    test -n "$PORT" && qpidd --no-module-dir --quit --port $PORT
}

error() { 
    echo $*;
    exit 1;
}

checklog() {
    if [[ $(grep echo $LOG_FILE | wc -l) -ne $1 ]]; then 
        cat $LOG_FILE
        error "Log contents not as expected - " $2
    fi
}

rm -rf $LOG_FILE
PORT=$(qpidd --auth=no --no-module-dir --daemon --port=0  --interface 127.0.0.1 --log-to-file $LOG_FILE) || error "Could not start broker"

echo Broker for log level test started on $PORT, pid is $(qpidd --no-module-dir --check --port $PORT)

# Set level to notice+ and send an echo request
# The 'echo' in the log is hidden since it is at debug level.
qpid-ctrl -b localhost:$PORT setLogLevel level='notice+' > /dev/null
qpid-ctrl -b localhost:$PORT echo sequence=1 body=HIDDEN > /dev/null
checklog 0 "Step 1 Expected no echo log entries"

# Next, enable all Broker logs at debug and higher levels and send another echo
# This 'echo' should be in the log.
qpid-ctrl -b localhost:$PORT setLogLevel level='debug+:Broker' > /dev/null
qpid-ctrl -b localhost:$PORT echo sequence=2 body=VISIBLE > /dev/null
checklog 1 "Step 2 Expected one echo log entry"

# Now turn on Broker debug messages but specifically disable ManagementMethod logs
# The 'echo' should be hidden.
qpid-ctrl -b localhost:$PORT setLogLevel level='debug+:Broker !debug+:broker::Broker::ManagementMethod' > /dev/null
qpid-ctrl -b localhost:$PORT echo sequence=3 body=HIDDEN > /dev/null
checklog 1 "Step 3 Expected one echo log entry"

# Verify that the management get returns what was just set
qpid-ctrl -b localhost:$PORT getLogLevel > dynamic_log_level.tmp
if [[ $(grep 'level=debug+:Broker,!debug+:broker::Broker::ManagementMethod' dynamic_log_level.tmp | wc -l) -ne 1 ]]; then
    error "Step 4 getLogLevel returned unexpected value: " `cat dynamic_log_level.tmp`
fi
rm -rf dynamic_log_level.tmp

cleanup

# Start another broker with --log-disable settings and make sure the management string receives them
rm -rf $LOG_FILE
PORT=$(qpidd --auth=no --no-module-dir --daemon --port=0  --interface 127.0.0.1 --log-to-file $LOG_FILE --log-enable debug:foo --log-disable debug:bar) || error "Could not start broker"
echo Broker for log level test started on $PORT, pid is $(qpidd --no-module-dir --check --port $PORT)

qpid-ctrl -b localhost:$PORT getLogLevel > dynamic_log_level.tmp
if [[ $(grep 'level=debug:foo,!debug:bar' dynamic_log_level.tmp | wc -l) -ne 1 ]]; then
    error "Step 5 getLogLevel returned unexpected value: " `cat dynamic_log_level.tmp`
fi
rm -rf dynamic_log_level.tmp

rm -rf $LOG_FILE
echo OK


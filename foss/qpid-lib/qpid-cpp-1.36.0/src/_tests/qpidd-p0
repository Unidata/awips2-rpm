#!/usr/bin/env python

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Wrapper script to allocate a port and fork a broker to listen on it.
#
# Instead of this:
#  qpidd --port 0 <qpidd-args...>
# do this:
#  qpidd-p0 <qpidd-args...>
#
# The port is bound by python code, and then handed over to the broker via the
# --socket-fd option.  This avoids problems with the qpidd --port 0 option which
# ocassional fails with an "address in use" error. It's not clear why --port 0
# doesn't work, it may be to do with the way qpidd binds a port to multiple
# addresses on a multi-homed host.
#

import subprocess, socket, time, os, sys

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(("", 0))
s.listen(5)
port = s.getsockname()[1]
print port
sys.stdout.flush()
if len(sys.argv) > 1:
    cmd = sys.argv[1:] + ["--socket-fd", str(s.fileno()), "--listen-disable=tcp"]
    os.execvp(sys.argv[1], cmd)
